// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Offer {
  id           String        @id @default(uuid())
  category     String
  location     String
  jobTitle     String
  companyName  String
  typeOfDayJob String
  seniority    String
  street       String
  building     String
  house        String
  city         String
  minSalary    String
  maxSalary    String
  exactSalary  String
  technologies String[]
  description  String        @db.VarChar(2000)
  obligations  String        @db.VarChar(500)
  requirements String        @db.VarChar(500)
  advantages   String        @db.VarChar(500)
  benefits     String        @db.VarChar(500)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime?     @updatedAt
  application  Application[] // add s at the end
  User         User          @relation(fields: [userId], references: [id])
  userId       String
}

model Application {
  id      String  @id @default(uuid())
  email   String
  name    String  @db.VarChar(100)
  message String  @db.VarChar(500)
  user    User?   @relation(fields: [userId], references: [id])
  userId  String?
  offer   Offer   @relation(fields: [offerId], references: [id], onDelete: Cascade)
  offerId String
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  session       Session[]
  applications  Application[]
  offers        Offer[]

  @@unique([id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
